{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paris/Desktop/react-front-end-projects/Github searcher/src/App.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/layouts/Navbar\";\nimport Users from \"./components/users/Users\";\nimport SearchBar from \"./components/users/SearchBar\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      //set loading for fetching data.loading is set to false when we don't fetch\n      loading: false\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      }); //this makes a request to github api for fetching users\n\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}`); //once we fetch the data we have setState() to re-set the state to false and get the results\n\n      this.setState({\n        users: res.data.items,\n        loading: false\n      }); // console.log(text);\n    };\n\n    this.clearUsersResults = () => this.setState({\n      users: [],\n      loading: false\n    });\n  }\n\n  async componentDidMount() {\n    //although you need to use setState() cycle method to change the status of loading\n    this.setState({\n      loading: true\n    }); //this makes a request to github api for fetching users\n\n    const res = await axios.get(\"https://api.github.com/users\"); //once we fetch the data we have setState() to re-set the state to false and get the results\n\n    this.setState({\n      users: res.data,\n      loading: false\n    }); //once we get a response, we'll map the API results to our props\n    //console.log(res.data);\n  } //define a function for searching users\n\n\n  render() {\n    //destructure props\n    const {\n      users,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        searchUsers: this.searchUsers,\n        clearUsersResults: this.clearUsersResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        loading: loading,\n        users: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/paris/Desktop/react-front-end-projects/Github searcher/src/App.js"],"names":["React","Component","Navbar","Users","SearchBar","axios","App","state","users","loading","searchUsers","text","setState","res","get","data","items","clearUsersResults","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNC,MAAAA,KAAK,EAAE,EADD;AAEN;AACAC,MAAAA,OAAO,EAAE;AAHH,KAFkB;;AAAA,SAoB1BC,WApB0B,GAoBZ,MAAOC,IAAP,IAAgB;AAC5B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd,EAD4B,CAE5B;;AACA,YAAMI,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CACf,yCAAwCH,IAAK,EAD9B,CAAlB,CAH4B,CAO5B;;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEK,GAAG,CAACE,IAAJ,CAASC,KAAlB;AAAyBP,QAAAA,OAAO,EAAE;AAAlC,OAAd,EAR4B,CAS5B;AACD,KA9ByB;;AAAA,SAiC1BQ,iBAjC0B,GAiCN,MAAM,KAAKL,QAAL,CAAc;AAAEJ,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,OAAO,EAAE;AAAtB,KAAd,CAjCA;AAAA;;AAQ1B,QAAMS,iBAAN,GAA0B;AACxB;AACA,SAAKN,QAAL,CAAc;AAAEH,MAAAA,OAAO,EAAE;AAAX,KAAd,EAFwB,CAGxB;;AACA,UAAMI,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,8BAAV,CAAlB,CAJwB,CAMxB;;AACA,SAAKF,QAAL,CAAc;AAAEJ,MAAAA,KAAK,EAAEK,GAAG,CAACE,IAAb;AAAmBN,MAAAA,OAAO,EAAE;AAA5B,KAAd,EAPwB,CAQxB;AACA;AACD,GAlByB,CAmB1B;;;AAgBAU,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqB,KAAKF,KAAhC;AAEA,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,SAAD;AACE,QAAA,WAAW,EAAE,KAAKG,WADpB;AAEE,QAAA,iBAAiB,EAAE,KAAKO;AAF1B;AAAA;AAAA;AAAA;AAAA,cAHF,eAQE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAER,OAAhB;AAAyB,QAAA,KAAK,EAAED;AAAhC;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAnDyB;;AAsD5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./components/layouts/Navbar\";\nimport Users from \"./components/users/Users\";\nimport SearchBar from \"./components/users/SearchBar\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  //state declares an empty array where\n  state = {\n    users: [],\n    //set loading for fetching data.loading is set to false when we don't fetch\n    loading: false,\n  };\n\n  async componentDidMount() {\n    //although you need to use setState() cycle method to change the status of loading\n    this.setState({ loading: true });\n    //this makes a request to github api for fetching users\n    const res = await axios.get(\"https://api.github.com/users\");\n\n    //once we fetch the data we have setState() to re-set the state to false and get the results\n    this.setState({ users: res.data, loading: false });\n    //once we get a response, we'll map the API results to our props\n    //console.log(res.data);\n  }\n  //define a function for searching users\n  searchUsers = async (text) => {\n    this.setState({ loading: true });\n    //this makes a request to github api for fetching users\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}`\n    );\n\n    //once we fetch the data we have setState() to re-set the state to false and get the results\n    this.setState({ users: res.data.items, loading: false });\n    // console.log(text);\n  };\n  //define a function method for clearing users\n\n  clearUsersResults = () => this.setState({ users: [], loading: false });\n\n  render() {\n    //destructure props\n    const { users, loading } = this.state;\n\n    return (\n      <div>\n        <Navbar />\n\n        <SearchBar\n          searchUsers={this.searchUsers}\n          clearUsersResults={this.clearUsersResults}\n        />\n\n        <Users loading={loading} users={users} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}