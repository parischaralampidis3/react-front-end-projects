{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paris/Desktop/react-front-end-projects/Github hook/src/components/users/Users.js\";\nimport React from \"react\";\nimport UserItem from \"./UserItem\";\nimport Spinner from \"../layouts/Spinner\"; //bring proptypes\n\nimport PropTypes from \"prop-types\";\n\nconst Users = ({\n  users,\n  loading\n}) => {\n  //set a condition for spinner loading\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  } else {\n    return (\n      /*#__PURE__*/\n      //this function maps the users through props from user item component\n      _jsxDEV(\"div\", {\n        style: userStyle,\n        children: users.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n          user: user\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)\n    );\n  }\n}; //bring prop-types for validating the data value\n\n\n_c = Users;\nUsers.propTypes = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n}; // inline style on the users greed\n\nconst userStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, 1fr)\",\n  gridGap: \"1rem\"\n};\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/paris/Desktop/react-front-end-projects/Github hook/src/components/users/Users.js"],"names":["React","UserItem","Spinner","PropTypes","Users","users","loading","userStyle","map","user","id","propTypes","array","isRequired","bool","display","gridTemplateColumns","gridGap"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACpC;AACA,MAAIA,OAAJ,EAAa;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL;AAAA;AACE;AACA;AAAK,QAAA,KAAK,EAAEC,SAAZ;AAAA,kBACGF,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAAwB,UAAA,IAAI,EAAEA;AAA9B,WAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAQD;AACF,CAdD,C,CAgBA;;;KAhBMN,K;AAiBNA,KAAK,CAACO,SAAN,GAAkB;AAChBN,EAAAA,KAAK,EAAEF,SAAS,CAACS,KAAV,CAAgBC,UADP;AAEhBP,EAAAA,OAAO,EAAEH,SAAS,CAACW,IAAV,CAAeD;AAFR,CAAlB,C,CAIA;;AACA,MAAMN,SAAS,GAAG;AAChBQ,EAAAA,OAAO,EAAE,MADO;AAEhBC,EAAAA,mBAAmB,EAAE,gBAFL;AAGhBC,EAAAA,OAAO,EAAE;AAHO,CAAlB;AAMA,eAAeb,KAAf","sourcesContent":["import React from \"react\";\r\nimport UserItem from \"./UserItem\";\r\nimport Spinner from \"../layouts/Spinner\";\r\n//bring proptypes\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Users = ({ users, loading }) => {\r\n  //set a condition for spinner loading\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      //this function maps the users through props from user item component\r\n      <div style={userStyle}>\r\n        {users.map((user) => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n//bring prop-types for validating the data value\r\nUsers.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n// inline style on the users greed\r\nconst userStyle = {\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"repeat(3, 1fr)\",\r\n  gridGap: \"1rem\",\r\n};\r\n\r\nexport default Users;\r\n"]},"metadata":{},"sourceType":"module"}